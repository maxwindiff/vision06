#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["BloomMaterial", "TimeBasedFade", "TrailMaterial"]
    def Material "BloomMaterial"
    {
        reorder nameChildren = ["Multiply", "TextureCoordinates", "Combine3", "Power", "Multiply_1", "Exp", "Multiply_2", "Multiply_3", "Ramp4Corners", "CrossProduct", "ConvertToVector3f", "ViewDirection", "Direction", "Magnitude", "Group", "CurveDistance", "Multiply_4", "CurvatureFade", "Group2", "DebugUV", "Group3", "Extract", "Subtract", "Multiply_5", "Group4", "RibbonOffsets", "UnlitSurface", "GeometryModifier", "TimeBasedFade"]
        float inputs:Width = 0.1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1814.8345, 862.6172)
                    int stackingOrderInSubgraph = 1912
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/BloomMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/BloomMaterial/GeometryModifier.outputs:out>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (2468.3345, 472.0161)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 632

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Combine3.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/TimeBasedFade.outputs:SmoothStep_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1654.0845, 197.71289)
            int ui:nodegraph:node:stackingOrder = 2073
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color = (0, 0.10115683, 1) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:color.connect = </Root/BloomMaterial/Multiply_4.outputs:out>
            bool inputs:hasPremultipliedAlpha = 1
            float inputs:opacity = 0
            float inputs:opacity.connect = None
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (2191.8345, 457.6172)
            int ui:nodegraph:node:stackingOrder = 796
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "GeometryModifier"
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_2_0_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/BloomMaterial/Multiply_2.outputs:out>
            float3 inputs:normal
            float2 inputs:uv0
            float2 inputs:uv1
            float4 inputs:uv2
            float4 inputs:uv3
            float4 inputs:uv4
            float4 inputs:uv5
            float4 inputs:uv6
            float4 inputs:uv7
            token outputs:out
            float2 ui:nodegraph:node:pos = (2191.8345, 763.6172)
            int ui:nodegraph:node:stackingOrder = 634
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (681.72266, 215.72266)
            int ui:nodegraph:node:stackingOrder = 2432
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1.connect = </Root/BloomMaterial/Exp.outputs:out>
            float inputs:in2 = 0.5
            float inputs:in2.connect = </Root/BloomMaterial/Exp.outputs:out>
            float inputs:in3 = 0.5
            float inputs:in3.connect = </Root/BloomMaterial/Exp.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1333.7708, 158.9961)
            int ui:nodegraph:node:stackingOrder = 2564
        }

        def Shader "Power"
        {
            uniform token info:id = "ND_power_float"
            float inputs:in1.connect = </Root/BloomMaterial/Subtract.outputs:out>
            float inputs:in2 = 2
            float inputs:in2.connect = None
            float outputs:out
            float2 ui:nodegraph:node:pos = (734.7461, 315.1836)
            int ui:nodegraph:node:stackingOrder = 2422
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/BloomMaterial/Power.outputs:out>
            float inputs:in2 = -100
            float outputs:out
            float2 ui:nodegraph:node:pos = (931.5039, 325.33984)
            int ui:nodegraph:node:stackingOrder = 2424
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "Exp"
        {
            uniform token info:id = "ND_exp_float"
            float inputs:in.connect = </Root/BloomMaterial/Multiply_1.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1099.8359, 322.23438)
            int ui:nodegraph:node:stackingOrder = 2426
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets.outputs:Multiply_2_out>
            float inputs:in2 = 0.02
            float inputs:in2.connect = </Root/BloomMaterial.inputs:Width>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1975.5845, 763.6172)
            int ui:nodegraph:node:stackingOrder = 1463
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Multiply.outputs:out>
            float inputs:in2 = 0.8
            float inputs:in2.connect = </Root/BloomMaterial/Magnitude.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1814.8345, 325.91504)
            int ui:nodegraph:node:stackingOrder = 1706
        }

        def Shader "Ramp4Corners"
        {
            uniform token info:id = "ND_ramp4_color3"
            float2 inputs:texcoord.connect = </Root/BloomMaterial/DebugUV.outputs:out>
            color3f inputs:valuebl = (0.00015001126, 1, 0.011297116) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuebr = (0, 0.053587526, 1) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuetl = (1, 1, 1) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuetr = (1, 0, 0.019096047) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2418.3652, 197.67224)
            int ui:nodegraph:node:stackingOrder = 2176
        }

        def Shader "CrossProduct"
        {
            uniform token info:id = "ND_crossproduct_vector3"
            float3 inputs:in1.connect = </Root/BloomMaterial/ViewDirection.outputs:out>
            float3 inputs:in2.connect = </Root/BloomMaterial/ConvertToVector3f.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1268.1602, 599.0625)
            int ui:nodegraph:node:stackingOrder = 1691
        }

        def Shader "ConvertToVector3f"
        {
            uniform token info:id = "ND_convert_color3_vector3"
            color3f inputs:in.connect = </Root/BloomMaterial/Direction.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1020.84766, 632.8047)
            int ui:nodegraph:node:stackingOrder = 1691
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "ViewDirection"
        {
            uniform token info:id = "ND_realitykit_viewdirection_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1004.7031, 565.1172)
            int ui:nodegraph:node:stackingOrder = 1691
        }

        def Shader "Direction"
        {
            uniform token info:id = "ND_geomcolor_color3"
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (768.8633, 630.91016)
            int ui:nodegraph:node:stackingOrder = 1789
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Magnitude"
        {
            uniform token info:id = "ND_magnitude_vector3"
            float3 inputs:in.connect = </Root/BloomMaterial/CrossProduct.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1473.0845, 597.9342)
            int ui:nodegraph:node:stackingOrder = 2558
        }

        def Scope "Group" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Fade when colinear"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:CrossProduct", "p:ConvertToVector3f", "p:ViewDirection", "p:Direction", "p:Magnitude"]
        }

        def Shader "CurveDistance"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 1
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (961.50244, 816.3047)
            int ui:nodegraph:node:stackingOrder = 2562
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Multiply_3.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/Multiply_5.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1975.5845, 460.0161)
            int ui:nodegraph:node:stackingOrder = 1709
        }

        def Shader "CurvatureFade"
        {
            uniform token info:id = "ND_extract_vector2"
            float2 inputs:in.connect = </Root/BloomMaterial/CurveDistance.outputs:out>
            int inputs:index = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (1198.412, 818.7975)
            int ui:nodegraph:node:stackingOrder = 2290
        }

        def Scope "Group2" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Fade when curvature is high"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:CurveDistance", "p:CurvatureFade", "p:Multiply_5"]
        }

        def Shader "DebugUV"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (2194.3652, 197.67224)
            int ui:nodegraph:node:stackingOrder = 2176
        }

        def Scope "Group3" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Debug Texture"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:DebugUV", "p:Ramp4Corners"]
        }

        def Shader "Extract"
        {
            uniform token info:id = "ND_extract_vector2"
            float2 inputs:in.connect = </Root/BloomMaterial/TextureCoordinates.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (904.14905, 219.52866)
            int ui:nodegraph:node:stackingOrder = 2430
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/BloomMaterial/Extract.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (1059.7181, 224.13458)
            int ui:nodegraph:node:stackingOrder = 2428
        }

        def Shader "Multiply_5"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/BloomMaterial/CurvatureFade.outputs:out>
            float inputs:in2 = 2
            float outputs:out
            float2 ui:nodegraph:node:pos = (1369.9453, 814.2661)
            int ui:nodegraph:node:stackingOrder = 2560
        }

        def Scope "Group4" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Gaussian"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Exp", "p:TextureCoordinates", "p:Multiply_1", "p:Power", "p:Extract", "p:Subtract"]
        }

        def NodeGraph "RibbonOffsets"
        {
            reorder nameChildren = ["ViewDirection", "Normalize", "CrossProduct", "Multiply_1", "TextureCoordinates", "Separate2", "Multiply_2", "Direction", "ConvertToVector3f"]
            float3 outputs:Multiply_2_out.connect = </Root/BloomMaterial/RibbonOffsets/Multiply_2.outputs:out>
            float2 ui:nodegraph:node:pos = (1814.8345, 733.6172)
            int ui:nodegraph:node:stackingOrder = 2556
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Multiply_2_out"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1273.9648, 180.33203)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1373

            def Shader "ViewDirection"
            {
                uniform token info:id = "ND_realitykit_viewdirection_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (598.25, 170)
                int ui:nodegraph:node:stackingOrder = 1443
            }

            def Shader "CrossProduct"
            {
                uniform token info:id = "ND_crossproduct_vector3"
                float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/ViewDirection.outputs:out>
                float3 inputs:in2.connect = </Root/BloomMaterial/RibbonOffsets/ConvertToVector3f.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (855, 200)
                int ui:nodegraph:node:stackingOrder = 1443
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/CrossProduct.outputs:out>
                float inputs:in2.connect = </Root/BloomMaterial/RibbonOffsets/Subtract.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (1074.8555, 208.92969)
                int ui:nodegraph:node:stackingOrder = 1348
            }

            def Shader "Direction"
            {
                uniform token info:id = "ND_geomcolor_color3"
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (341.16016, 273.40234)
                int ui:nodegraph:node:stackingOrder = 1449
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "ConvertToVector3f"
            {
                uniform token info:id = "ND_convert_color3_vector3"
                color3f inputs:in.connect = </Root/BloomMaterial/RibbonOffsets/Direction.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (612.3633, 271.1328)
                int ui:nodegraph:node:stackingOrder = 1447
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Extract"
            {
                uniform token info:id = "ND_extract_vector2"
                float2 inputs:in.connect = </Root/BloomMaterial/RibbonOffsets/VertexOffset.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (512.28516, 466.85547)
                int ui:nodegraph:node:stackingOrder = 1444
            }

            def Shader "VertexOffset"
            {
                uniform token info:id = "ND_texcoord_vector2"
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (286.71484, 462.9375)
                int ui:nodegraph:node:stackingOrder = 1374
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_float"
                float inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/Extract.outputs:out>
                float inputs:in2 = 0.5
                float outputs:out
                float2 ui:nodegraph:node:pos = (702.0781, 471.98438)
                int ui:nodegraph:node:stackingOrder = 1380
            }
        }

        def "TimeBasedFade" (
            active = true
            instanceable = true
            references = </Root/TimeBasedFade>
        )
        {
            float inputs:DelaySeconds = 0
            float2 ui:nodegraph:node:pos = (1368.72, 371.1211)
            int ui:nodegraph:node:stackingOrder = 2575
        }
    }

    def NodeGraph "TimeBasedFade"
    {
        float inputs:DelaySeconds = 0 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (554.25, 188)
                    int stackingOrderInSubgraph = 1034
                }
            }
        )
        float outputs:SmoothStep_out.connect = </Root/TimeBasedFade/SmoothStep.outputs:out>
        float2 ui:nodegraph:node:pos = (1348.72, 351.1211)
        int ui:nodegraph:node:stackingOrder = 2566
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1079.75, 85)

        def Shader "SmoothStep"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high = 0.6
            float inputs:in.connect = </Root/TimeBasedFade/Subtract.outputs:out>
            float inputs:low = 0.9
            float outputs:out
            float2 ui:nodegraph:node:pos = (873.75, 85)
            int ui:nodegraph:node:stackingOrder = 1026
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 2
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (103.5, 27.5)
            int ui:nodegraph:node:stackingOrder = 1024
        }

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/TimeBasedFade/Separate2.outputs:outy>
            float inputs:in2.connect = </Root/TimeBasedFade/Separate2.outputs:outx>
            float outputs:out
            float2 ui:nodegraph:node:pos = (554.25, 27.5)
            int ui:nodegraph:node:stackingOrder = 1032
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/TimeBasedFade/TextureCoordinates.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (341.5, 27.5)
            int ui:nodegraph:node:stackingOrder = 1028
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/TimeBasedFade/Subtract_1.outputs:out>
            float inputs:in2.connect = </Root/TimeBasedFade.inputs:DelaySeconds>
            float outputs:out
            float2 ui:nodegraph:node:pos = (721.25, 85)
            int ui:nodegraph:node:stackingOrder = 1037
        }
    }

    def Material "TrailMaterial"
    {
        reorder nameChildren = ["Separate2_1", "Subtract_1", "SmoothStep", "HSVToRGB", "Multiply", "TextureCoordinates", "Combine3", "UnlitSurface", "TimeBasedFade"]
        token outputs:mtlx:surface.connect = </Root/TrailMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1493.25, 91.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 797

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/TrailMaterial/Separate2.outputs:outy>
            float inputs:in2.connect = </Root/TrailMaterial/Separate2.outputs:outx>
            float outputs:out
            float2 ui:nodegraph:node:pos = (517.25, 107)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "HSVToRGB"
        {
            uniform token info:id = "ND_hsvtorgb_color3"
            color3f inputs:in.connect = </Root/TrailMaterial/Combine3.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (889.25, 61.5)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/TrailMaterial/HSVToRGB.outputs:out>
            float inputs:in2.connect = </Root/TrailMaterial/TimeBasedFade.outputs:SmoothStep_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1055.5, 91.5)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 2
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (103.5, 107)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1 = 0.22
            float inputs:in1.connect = </Root/TrailMaterial/Subtract_1.outputs:out>
            float inputs:in2 = 0.6
            float inputs:in3 = 0.8
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (678.5, 61.5)
            int ui:nodegraph:node:stackingOrder = 2573
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color.connect = </Root/TrailMaterial/Multiply.outputs:out>
            bool inputs:hasPremultipliedAlpha = 1
            float inputs:opacity = 0
            token outputs:out
            float2 ui:nodegraph:node:pos = (1244.25, 91.5)
            int ui:nodegraph:node:stackingOrder = 800
        }

        def "TimeBasedFade" (
            active = true
            instanceable = true
            references = </Root/TimeBasedFade>
        )
        {
            float inputs:DelaySeconds
            float2 ui:nodegraph:node:pos = (845.0781, 218.92188)
            int ui:nodegraph:node:stackingOrder = 2569
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/TrailMaterial/TextureCoordinates.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (347.75, 107)
            int ui:nodegraph:node:stackingOrder = 2571
        }
    }
}

