#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["TimeBasedFade", "BloomMaterial", "RainbowMaterial", "CoreMaterial"]
    def Material "BloomMaterial"
    {
        reorder nameChildren = ["Multiply", "TextureCoordinates", "Combine3", "Power", "Multiply_1", "Exp", "Multiply_2", "Multiply_3", "Ramp4Corners", "CrossProduct", "ConvertToVector3f", "ViewDirection", "Direction", "Magnitude", "Group", "CurveDistance", "Multiply_4", "CurvatureFade", "Group2", "DebugUV", "Group3", "Extract", "Subtract", "Multiply_5", "Group4", "RibbonOffsets", "UnlitSurface", "GeometryModifier", "TimeBasedFade"]
        float inputs:FadeOutBegin = 0.6 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1808.7706, 846.56683)
                    int stackingOrderInSubgraph = 2937
                }
            }
        )
        float inputs:FadeOutComplete = 0.9 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (1815.3292, 932.20355)
                    int stackingOrderInSubgraph = 2934
                }
            }
        )
        float inputs:Width = 0.1 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (2086.1443, 253.5)
                    int stackingOrderInSubgraph = 1912
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/BloomMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex.connect = </Root/BloomMaterial/GeometryModifier.outputs:out>
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (3022.599, 224.6857)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 632

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Convert.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/Magnitude.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2086.1443, 359)
            int ui:nodegraph:node:stackingOrder = 2073
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color = (0, 0.10115683, 1) (
                colorSpace = "srgb_displayp3"
            )
            color3f inputs:color.connect = </Root/BloomMaterial/Multiply_4.outputs:out>
            bool inputs:hasPremultipliedAlpha = 1
            float inputs:opacity = 0
            float inputs:opacity.connect = None
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (2746.099, 586.8714)
            int ui:nodegraph:node:stackingOrder = 796
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "GeometryModifier"
        {
            uniform token info:id = "ND_realitykit_geometrymodifier_2_0_vertexshader"
            float3 inputs:bitangent
            color4f inputs:color
            float3 inputs:modelPositionOffset.connect = </Root/BloomMaterial/Multiply_2.outputs:out>
            float3 inputs:normal
            float2 inputs:uv0
            float2 inputs:uv1
            float4 inputs:uv2
            float4 inputs:uv3
            float4 inputs:uv4
            float4 inputs:uv5
            float4 inputs:uv6
            float4 inputs:uv7
            token outputs:out
            float2 ui:nodegraph:node:pos = (2746.099, 154.5)
            int ui:nodegraph:node:stackingOrder = 634
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1058.6687, 364.05457)
            int ui:nodegraph:node:stackingOrder = 2926
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Multiply_2"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets.outputs:Multiply_2_out>
            float inputs:in2 = 0.02
            float inputs:in2.connect = </Root/BloomMaterial.inputs:Width>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (2413.849, 154.5)
            int ui:nodegraph:node:stackingOrder = 1463
        }

        def Shader "Multiply_3"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Multiply.outputs:out>
            float inputs:in2 = 0.8
            float inputs:in2.connect = </Root/BloomMaterial/CurvatureFade.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2413.849, 452.25)
            int ui:nodegraph:node:stackingOrder = 1706
        }

        def Shader "Ramp4Corners"
        {
            uniform token info:id = "ND_ramp4_color3"
            float2 inputs:texcoord.connect = </Root/BloomMaterial/DebugUV.outputs:out>
            color3f inputs:valuebl = (0.00015001126, 1, 0.011297116) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuebr = (0, 0.053587526, 1) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuetl = (1, 1, 1) (
                colorSpace = "srgb_texture"
            )
            color3f inputs:valuetr = (1, 0, 0.019096047) (
                colorSpace = "srgb_texture"
            )
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2325.1504, -90.71448)
            int ui:nodegraph:node:stackingOrder = 2176
        }

        def Shader "CrossProduct"
        {
            uniform token info:id = "ND_crossproduct_vector3"
            float3 inputs:in1.connect = </Root/BloomMaterial/ViewDirection.outputs:out>
            float3 inputs:in2.connect = </Root/BloomMaterial/ConvertToVector3f.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1488.5151, 557.9765)
            int ui:nodegraph:node:stackingOrder = 1691
        }

        def Shader "ConvertToVector3f"
        {
            uniform token info:id = "ND_convert_color3_vector3"
            color3f inputs:in.connect = </Root/BloomMaterial/Direction.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1241.2026, 591.7187)
            int ui:nodegraph:node:stackingOrder = 1691
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "ViewDirection"
        {
            uniform token info:id = "ND_realitykit_viewdirection_vector3"
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1225.0581, 524.0312)
            int ui:nodegraph:node:stackingOrder = 1691
        }

        def Shader "Direction"
        {
            uniform token info:id = "ND_geomcolor_color3"
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (989.21826, 589.82416)
            int ui:nodegraph:node:stackingOrder = 1789
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Magnitude"
        {
            uniform token info:id = "ND_magnitude_vector3"
            float3 inputs:in.connect = </Root/BloomMaterial/CrossProduct.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1693.4395, 556.8482)
            int ui:nodegraph:node:stackingOrder = 2558
        }

        def Scope "Group" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Fade when colinear"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:CrossProduct", "p:ConvertToVector3f", "p:ViewDirection", "p:Direction", "p:Magnitude"]
        }

        def Shader "CurveDistance"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 1
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (1984.6895, 646.5)
            int ui:nodegraph:node:stackingOrder = 2562
        }

        def Shader "Multiply_4"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/BloomMaterial/Multiply_3.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/TimeBasedFade.outputs:SmoothStep_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (2529.849, 586.8714)
            int ui:nodegraph:node:stackingOrder = 1709
        }

        def Shader "CurvatureFade"
        {
            uniform token info:id = "ND_extract_vector2"
            float2 inputs:in.connect = </Root/BloomMaterial/CurveDistance.outputs:out>
            int inputs:index = 1
            float outputs:out
            float2 ui:nodegraph:node:pos = (2221.599, 648.9928)
            int ui:nodegraph:node:stackingOrder = 2928
        }

        def Scope "Group2" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Fade when curvature is high"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:CurveDistance", "p:CurvatureFade"]
        }

        def Shader "DebugUV"
        {
            uniform token info:id = "ND_texcoord_vector2"
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (2101.1504, -90.71448)
            int ui:nodegraph:node:stackingOrder = 2176
        }

        def Scope "Group3" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Debug Texture"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:DebugUV", "p:Ramp4Corners"]
        }

        def Shader "Extract"
        {
            uniform token info:id = "ND_extract_vector2"
            float2 inputs:in.connect = </Root/BloomMaterial/TextureCoordinates.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1250.9146, 365.4134)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def Shader "Subtract"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/BloomMaterial/Extract.outputs:out>
            float inputs:in2 = 0.5
            float outputs:out
            float2 ui:nodegraph:node:pos = (1378.8654, 363.94272)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def NodeGraph "RibbonOffsets"
        {
            reorder nameChildren = ["ViewDirection", "Normalize", "CrossProduct", "Multiply_1", "TextureCoordinates", "Separate2", "Multiply_2", "Direction", "ConvertToVector3f"]
            float3 outputs:Multiply_2_out.connect = </Root/BloomMaterial/RibbonOffsets/Multiply_2.outputs:out>
            float2 ui:nodegraph:node:pos = (2086.1443, 124.5)
            int ui:nodegraph:node:stackingOrder = 2556
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:Multiply_2_out"]
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1273.9648, 180.33203)
            int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1373

            def Shader "ViewDirection"
            {
                uniform token info:id = "ND_realitykit_viewdirection_vector3"
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (598.25, 170)
                int ui:nodegraph:node:stackingOrder = 1443
            }

            def Shader "CrossProduct"
            {
                uniform token info:id = "ND_crossproduct_vector3"
                float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/ViewDirection.outputs:out>
                float3 inputs:in2.connect = </Root/BloomMaterial/RibbonOffsets/ConvertToVector3f.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (855, 200)
                int ui:nodegraph:node:stackingOrder = 1443
            }

            def Shader "Multiply_2"
            {
                uniform token info:id = "ND_multiply_vector3FA"
                float3 inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/CrossProduct.outputs:out>
                float inputs:in2.connect = </Root/BloomMaterial/RibbonOffsets/Subtract.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (1074.8555, 208.92969)
                int ui:nodegraph:node:stackingOrder = 1348
            }

            def Shader "Direction"
            {
                uniform token info:id = "ND_geomcolor_color3"
                color3f outputs:out
                float2 ui:nodegraph:node:pos = (341.16016, 273.40234)
                int ui:nodegraph:node:stackingOrder = 1449
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "ConvertToVector3f"
            {
                uniform token info:id = "ND_convert_color3_vector3"
                color3f inputs:in.connect = </Root/BloomMaterial/RibbonOffsets/Direction.outputs:out>
                float3 outputs:out
                float2 ui:nodegraph:node:pos = (612.3633, 271.1328)
                int ui:nodegraph:node:stackingOrder = 1447
                string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
            }

            def Shader "Extract"
            {
                uniform token info:id = "ND_extract_vector2"
                float2 inputs:in.connect = </Root/BloomMaterial/RibbonOffsets/VertexOffset.outputs:out>
                float outputs:out
                float2 ui:nodegraph:node:pos = (512.28516, 466.85547)
                int ui:nodegraph:node:stackingOrder = 1444
            }

            def Shader "VertexOffset"
            {
                uniform token info:id = "ND_texcoord_vector2"
                float2 outputs:out
                float2 ui:nodegraph:node:pos = (286.71484, 462.9375)
                int ui:nodegraph:node:stackingOrder = 1374
            }

            def Shader "Subtract"
            {
                uniform token info:id = "ND_subtract_float"
                float inputs:in1.connect = </Root/BloomMaterial/RibbonOffsets/Extract.outputs:out>
                float inputs:in2 = 0.5
                float outputs:out
                float2 ui:nodegraph:node:pos = (702.0781, 471.98438)
                int ui:nodegraph:node:stackingOrder = 1380
            }
        }

        def "TimeBasedFade" (
            active = true
            instanceable = true
            references = </Root/TimeBasedFade>
        )
        {
            float inputs:DelaySeconds = 0
            float inputs:FadeOutBegin.connect = </Root/BloomMaterial.inputs:FadeOutBegin>
            float inputs:FadeOutComplete.connect = </Root/BloomMaterial.inputs:FadeOutComplete>
            float2 ui:nodegraph:node:pos = (2086.1443, 822.9928)
            int ui:nodegraph:node:stackingOrder = 2930
        }

        def Shader "Abs"
        {
            uniform token info:id = "ND_absval_float"
            float inputs:in.connect = </Root/BloomMaterial/Subtract.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1482.8608, 363.07233)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def Shader "Divide"
        {
            uniform token info:id = "ND_divide_float"
            float inputs:in1 = 1
            float inputs:in1.connect = </Root/BloomMaterial/Subtract_1.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/Abs.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1695.6653, 374.8161)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def Shader "ConstantFloat3"
        {
            uniform token info:id = "ND_constant_vector3"
            float3 inputs:value = (0.008, 0.01, 0.015)
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1510.5376, 189.87845)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def Shader "Multiply_1"
        {
            uniform token info:id = "ND_multiply_vector3FA"
            prepend float3 inputs:in1.connect = </Root/BloomMaterial/ConstantFloat3.outputs:out>
            float inputs:in2.connect = </Root/BloomMaterial/Divide.outputs:out>
            float3 outputs:out
            float2 ui:nodegraph:node:pos = (1726.637, 246.3523)
            int ui:nodegraph:node:stackingOrder = 2926
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["outputs:out"]
        }

        def Shader "Convert"
        {
            uniform token info:id = "ND_convert_vector3_color3"
            float3 inputs:in.connect = </Root/BloomMaterial/Multiply_1.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1853.8135, 322.9175)
            int ui:nodegraph:node:stackingOrder = 2932
        }

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1 = 0.5
            float inputs:in2.connect = </Root/BloomMaterial/Abs.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (1608.5646, 323.65964)
            int ui:nodegraph:node:stackingOrder = 2926
        }

        def Scope "Group4" (
            kind = "group"
        )
        {
            string ui:group:annotation = "Light Band"
            string ui:group:annotationDescription = ""
            string[] ui:group:members = ["p:Subtract_1", "p:ConstantFloat3", "p:Abs", "p:Subtract", "p:TextureCoordinates", "p:Multiply_1", "p:Divide", "p:Extract"]
        }
    }

    def NodeGraph "TimeBasedFade"
    {
        float inputs:FadeOutBegin = 0.6 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (566.25, 238.5)
                    int stackingOrderInSubgraph = 1189
                }
            }
        )
        float inputs:FadeOutComplete = 0.9 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (566.25, 123.5)
                    int stackingOrderInSubgraph = 1186
                }
            }
        )
        float outputs:SmoothStep_out.connect = </Root/TimeBasedFade/Multiply.outputs:out>
        float2 ui:nodegraph:node:pos = (1348.72, 351.1211)
        int ui:nodegraph:node:stackingOrder = 2566
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1124.75, 137.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 1052

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 2
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (103.5, 135.5)
            int ui:nodegraph:node:stackingOrder = 1042
        }

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/TimeBasedFade/Separate2.outputs:outx>
            float inputs:in2.connect = </Root/TimeBasedFade/Separate2.outputs:outy>
            float outputs:out
            float2 ui:nodegraph:node:pos = (566.25, 18)
            int ui:nodegraph:node:stackingOrder = 1182
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/TimeBasedFade/TextureCoordinates.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (341.5, 135.5)
            int ui:nodegraph:node:stackingOrder = 1185
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_float"
            float inputs:in1.connect = </Root/TimeBasedFade/FadeOut.outputs:out>
            float inputs:in2.connect = </Root/TimeBasedFade/FirstLoadFadeIn.outputs:out>
            float outputs:out
            float2 ui:nodegraph:node:pos = (954.5, 137.5)
            int ui:nodegraph:node:stackingOrder = 1152
        }

        def Shader "FadeOut"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high = 0.6
            float inputs:high.connect = </Root/TimeBasedFade.inputs:FadeOutBegin>
            float inputs:in.connect = </Root/TimeBasedFade/Subtract_1.outputs:out>
            float inputs:low = 0.9
            float inputs:low.connect = </Root/TimeBasedFade.inputs:FadeOutComplete>
            float outputs:out
            float2 ui:nodegraph:node:pos = (791.5, 96)
            int ui:nodegraph:node:stackingOrder = 1184
        }

        def Shader "FirstLoadFadeIn"
        {
            uniform token info:id = "ND_smoothstep_float"
            float inputs:high = 0.5
            float inputs:in.connect = </Root/TimeBasedFade/Separate2.outputs:outy>
            float inputs:low = 0
            float outputs:out
            float2 ui:nodegraph:node:pos = (791.5, 326)
            int ui:nodegraph:node:stackingOrder = 1178
        }
    }

    def Material "RainbowMaterial"
    {
        reorder nameChildren = ["Separate2_1", "Subtract_1", "SmoothStep", "HSVToRGB", "Multiply", "TextureCoordinates", "Combine3", "UnlitSurface", "TimeBasedFade"]
        token outputs:mtlx:surface.connect = </Root/RainbowMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (1493.25, 91.5)
        int ui:nodegraph:realitykit:subgraphOutputs:stackingOrder = 797

        def Shader "Subtract_1"
        {
            uniform token info:id = "ND_subtract_float"
            float inputs:in1.connect = </Root/RainbowMaterial/Separate2.outputs:outx>
            float inputs:in2.connect = </Root/RainbowMaterial/Separate2.outputs:outy>
            float outputs:out
            float2 ui:nodegraph:node:pos = (517.25, 107)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "HSVToRGB"
        {
            uniform token info:id = "ND_hsvtorgb_color3"
            color3f inputs:in.connect = </Root/RainbowMaterial/Combine3.outputs:out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (889.25, 61.5)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1.connect = </Root/RainbowMaterial/HSVToRGB.outputs:out>
            float inputs:in2.connect = </Root/RainbowMaterial/TimeBasedFade.outputs:SmoothStep_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (1055.5, 91.5)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "TextureCoordinates"
        {
            uniform token info:id = "ND_texcoord_vector2"
            int inputs:index = 2
            float2 outputs:out
            float2 ui:nodegraph:node:pos = (103.5, 107)
            int ui:nodegraph:node:stackingOrder = 795
        }

        def Shader "Combine3"
        {
            uniform token info:id = "ND_combine3_color3"
            float inputs:in1 = 0.22
            float inputs:in1.connect = </Root/RainbowMaterial/Subtract_1.outputs:out>
            float inputs:in2 = 0.6
            float inputs:in3 = 0.8
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (678.5, 61.5)
            int ui:nodegraph:node:stackingOrder = 2573
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = []
        }

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color.connect = </Root/RainbowMaterial/Multiply.outputs:out>
            bool inputs:hasPremultipliedAlpha = 1
            float inputs:opacity = 0
            token outputs:out
            float2 ui:nodegraph:node:pos = (1244.25, 91.5)
            int ui:nodegraph:node:stackingOrder = 800
        }

        def "TimeBasedFade" (
            active = true
            instanceable = true
            references = </Root/TimeBasedFade>
        )
        {
            float inputs:DelaySeconds
            float2 ui:nodegraph:node:pos = (845.0781, 218.92188)
            int ui:nodegraph:node:stackingOrder = 2575
        }

        def Shader "Separate2"
        {
            uniform token info:id = "ND_separate2_vector2"
            float2 inputs:in.connect = </Root/RainbowMaterial/TextureCoordinates.outputs:out>
            float outputs:outx
            float outputs:outy
            float2 ui:nodegraph:node:pos = (347.75, 107)
            int ui:nodegraph:node:stackingOrder = 2571
        }
    }

    def Material "CoreMaterial"
    {
        reorder nameChildren = ["UnlitSurface", "Multiply", "TimeBasedFade"]
        float inputs:FadeOutBegin = 0.6 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-463.35156, 168.87695)
                    int stackingOrderInSubgraph = 2866
                }
            }
        )
        float inputs:FadeOutComplete = 0.9 (
            customData = {
                dictionary realitykit = {
                    float2 positionInSubgraph = (-475.36328, 249.13867)
                    int stackingOrderInSubgraph = 2864
                }
            }
        )
        token outputs:mtlx:surface.connect = </Root/CoreMaterial/UnlitSurface.outputs:out>
        token outputs:realitykit:vertex
        float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (465.75, 91.5)

        def Shader "UnlitSurface"
        {
            uniform token info:id = "ND_realitykit_unlit_surfaceshader"
            bool inputs:applyPostProcessToneMap = 0
            color3f inputs:color.connect = </Root/CoreMaterial/Multiply.outputs:out>
            bool inputs:hasPremultipliedAlpha = 1
            float inputs:opacity = 0
            float inputs:opacity.connect = None
            float inputs:opacityThreshold
            token outputs:out
            float2 ui:nodegraph:node:pos = (216.75, 91.5)
            int ui:nodegraph:node:stackingOrder = 2638
            string[] ui:nodegraph:realitykit:node:attributesShowingChildren = ["inputs:applyPostProcessToneMap"]
        }

        def "TimeBasedFade" (
            active = true
            instanceable = false
            references = </Root/TimeBasedFade>
        )
        {
            float inputs:FadeOutBegin.connect = </Root/CoreMaterial.inputs:FadeOutBegin>
            float inputs:FadeOutComplete.connect = </Root/CoreMaterial.inputs:FadeOutComplete>
            float outputs:SmoothStep_out.connect = </Root/CoreMaterial/TimeBasedFade/Multiply.outputs:out>
            float2 ui:nodegraph:node:pos = (-213.28125, 169.8086)
            int ui:nodegraph:node:stackingOrder = 2862
            float2 ui:nodegraph:realitykit:subgraphOutputs:pos = (991.25, 103.5)

            over "Separate2"
            {
                float2 ui:nodegraph:node:pos = (341.5, 119)
            }

            over "TextureCoordinates"
            {
                float2 ui:nodegraph:node:pos = (103.5, 119)
            }

            over "SmoothStep_1"
            {
                float2 ui:nodegraph:node:pos = (663.25, 280.5)
            }

            over "Multiply"
            {
                float2 ui:nodegraph:node:pos = (821, 103.5)
            }

            over "SmoothStep"
            {
                float2 ui:nodegraph:node:pos = (663.25, 73.5)
            }

            over "Subtract_1"
            {
                float2 ui:nodegraph:node:pos = (504.75, 73.5)
            }
        }

        def Shader "Multiply"
        {
            uniform token info:id = "ND_multiply_color3FA"
            color3f inputs:in1 = (1, 1, 1) (
                colorSpace = "srgb_texture"
            )
            prepend float inputs:in2.connect = </Root/CoreMaterial/TimeBasedFade.outputs:SmoothStep_out>
            color3f outputs:out
            float2 ui:nodegraph:node:pos = (-0.0390625, 55.921875)
            int ui:nodegraph:node:stackingOrder = 2859
        }
    }
}

